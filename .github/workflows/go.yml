# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write
  
jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23.4']
        
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
   # Install gotestfmt on the VM running the action.
    - name: Set up gotestfmt
      uses: GoTestTools/gotestfmt-action@v2
      with:
        # Optional: pass the gotestfmt version you want to run. 
        version: v2.0.0
        # Optional: pass an organization name and repo to use a fork
        org: GoTestTools
        repo: gotestfmt


    - name: Build
      run: find . -name go.mod -execdir go build -v ./... \;

    - name: Test
      run: sudo find . -name go.mod -execdir go test -race -json -v -coverprofile=coverage.txt ./... \;  2>&1 | tee /tmp/gotest.log | gotestfmt

    - name: coverage
      id: coverage
      uses: vladopajic/go-test-coverage@v2
      with:
        config: ./.github/.testcoverage.yml

    - name: post coverage report
      if: github.event_name == 'pull_request'
      uses: thollander/actions-comment-pull-request@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        pr-number: ${{ github.event.pull_request.number }}
        message: |
          go-test-coverage report:
          ``` 
          ${{ fromJSON(steps.coverage.outputs.report) }}```